function [y1] = myNeuralNetworkFunction(x1)
%MYNEURALNETWORKFUNCTION neural network simulation function.
%
% Auto-generated by MATLAB, 11-Jul-2020 21:07:11.
%
% [y1] = myNeuralNetworkFunction(x1) takes these arguments:
%   x = 1xQ matrix, input #1
% and returns:
%   y = 1xQ matrix, output #1
% where Q is the number of samples.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = 0;
x1_step1.gain = 2;
x1_step1.ymin = -1;

% Layer 1
b1 = [-4.1178298945223836824;-3.1042426764737620637;1.5847015195020304201;-0.77377078700151724622;0.045582354051397780403;-1.033604905780155736;2.3218149930517246737;-4.1197625602375165244;6.9529888777535422406;-12.447389485264837461];
IW1_1 = [3.6645007701690337498;3.7269153824826086741;-2.7457443076059000475;3.0923187360559580839;3.6113278697777393411;-4.314512016739185718;5.2954681069408273686;-6.7474882808909972809;9.2191276916203932501;-14.319460353561520805];

% Layer 2
b2 = 0.36495791252770398705;
LW2_1 = [0.41810382800915985024 0.15687687216665432977 -0.34928888669020791147 0.17551929608149696715 0.11084876502568619117 -0.071500873777951529098 0.044356622755031938077 -0.024945854753409810178 0.011529915122545220454 -0.0037429679007495190654];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = 2;
y1_step1.xoffset = 0;

% ===== SIMULATION ========

% Dimensions
Q = size(x1,2); % samples

% Input 1
xp1 = mapminmax_apply(x1,x1_step1);

% Layer 1
a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*xp1);

% Layer 2
a2 = repmat(b2,1,Q) + LW2_1*a1;

% Output 1
y1 = mapminmax_reverse(a2,y1_step1);
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
y = bsxfun(@minus,x,settings.xoffset);
y = bsxfun(@times,y,settings.gain);
y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
x = bsxfun(@minus,y,settings.ymin);
x = bsxfun(@rdivide,x,settings.gain);
x = bsxfun(@plus,x,settings.xoffset);
end
